services:
  db:
    image: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER" ]
      interval: 20s
      retries: 5
      timeout: 5s

  redis:
    image: redis

#    ports:
#      - '6378:6379'
#
#
#    volumes:
#      - .:/app
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 1m30s
      timeout: 10s
      retries: 3

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l info -P gevent

    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l info

    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app

volumes:
  pg_data: